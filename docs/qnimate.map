{"version":3,"sources":["webpack:///qnimate.min.js","webpack:///webpack/bootstrap bf24edea42d964d43cf0","webpack:///./src/qnimate.js","webpack:///./~/d3/build/d3.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_d","d3","Qnimate","_ref","width","height","vertices","this","domId","vertexNum","_init","value","isRunning","_tick","_this","FPS","interval","then","Date","now","renderCount","voronoi","range","map","randomUniform","symbols","Math","random","svg","select","append","attr","graph","_this2","window","requestAnimationFrame","delta","_render","setTimeout","d","dx","dy","lab","_this3","paths","selectAll","data","triangles","nodes","enter","_color","polygonCentroid","polygonHull","join","_nextVertices","_this4","v","x","y","global","factory","ascendingComparator","f","ascending","tickStep","start","stop","count","step0","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","Map","map$1","object","each","set","Array","isArray","o","n","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","_","path","tree","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","Quadtree","NaN","undefined","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","e","abort","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","min","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","s","extend","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","round","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","name","indexOf","type","get","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","clearInterval","setInterval","newInterval","floori","offseti","field","date","ceil","d0","d1","offset","step","filter","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","domain","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","ticks","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","top","range0","range1","position","order","tickExit","tickEnter","line","text","left","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","sum","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createRange","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","_found","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw"],"mappings":"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","file":"qnimate.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Qnimate = function () {\n\t  function Qnimate(_ref) {\n\t    var id = _ref.id,\n\t        width = _ref.width,\n\t        height = _ref.height,\n\t        vertices = _ref.vertices;\n\t\n\t    _classCallCheck(this, Qnimate);\n\t\n\t    this.domId = id;\n\t    this.width = width || 960;\n\t    this.height = height || 500;\n\t    this.vertexNum = vertices || 40;\n\t    this._init();\n\t  }\n\t\n\t  // public members\n\t\n\t  _createClass(Qnimate, [{\n\t    key: 'run',\n\t    value: function run() {\n\t      this.isRunning = true;\n\t      this._tick();\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      this.isRunning = false;\n\t    }\n\t\n\t    // private members\n\t\n\t  }, {\n\t    key: '_init',\n\t    value: function _init() {\n\t      var _this = this;\n\t\n\t      this.FPS = 30;\n\t      this.interval = 1000 / this.FPS;\n\t      this.then = Date.now();\n\t      this.renderCount = 10 * this.FPS;\n\t\n\t      this.voronoi = d3.voronoi();\n\t      this.vertices = d3.range(this.vertexNum).map(function () {\n\t        return [d3.randomUniform(-_this.width / 2, 1.5 * _this.width)(), d3.randomUniform(-_this.height / 2, 1.5 * _this.height)()];\n\t      });\n\t      this.symbols = this.vertices.map(function () {\n\t        return Math.random() > 0.5 ? 1 : -1;\n\t      });\n\t\n\t      // the root element <svg>\n\t      this.svg = d3.select('#' + this.domId).append('svg').attr('width', this.width).attr('height', this.height);\n\t\n\t      // our canvas <g>\n\t      this.graph = this.svg.append('g');\n\t    }\n\t  }, {\n\t    key: '_tick',\n\t    value: function _tick() {\n\t      var _this2 = this;\n\t\n\t      if (this.isRunning) {\n\t        if (window.requestAnimationFrame) {\n\t          requestAnimationFrame(function () {\n\t            return _this2._tick();\n\t          });\n\t          var now = Date.now();\n\t          var delta = now - this.then;\n\t          if (delta > this.interval) {\n\t            this.then = now - delta % this.interval;\n\t\n\t            // call render recursively\n\t            this._render(this.vertices);\n\t          }\n\t        } else {\n\t          setTimeout(function () {\n\t            return _this2._tick();\n\t          }, this.interval);\n\t\n\t          // call render recursively\n\t          this._render(this.vertices);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * generate color from a point\n\t     * @param d\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_color',\n\t    value: function _color(d) {\n\t      var dx = d[0] - this.width / 2,\n\t          dy = d[1] - this.height / 2;\n\t      return d3.lab(100 - (dx * dx + dy * dy) / 5000, dx / 10, dy / 10);\n\t    }\n\t\n\t    /**\n\t     * render a frame by vertices\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_render',\n\t    value: function _render() {\n\t      var _this3 = this;\n\t\n\t      var paths = this.graph.selectAll('path').attr('stroke-linejoin', 'round').attr('stroke-linecap', 'butt').data(this.voronoi(this.vertices).triangles());\n\t\n\t      if (paths.nodes().length < 1) {\n\t        paths = paths.enter().append('path');\n\t      }\n\t\n\t      paths.attr('fill', function (d) {\n\t        return _this3._color(d3.polygonCentroid(d3.polygonHull(d)));\n\t      }).attr('d', function (d) {\n\t        return 'M' + d.join('L') + 'Z';\n\t      });\n\t\n\t      // vertices generated at every render circle\n\t      this._nextVertices();\n\t    }\n\t\n\t    /**\n\t     * generate the next vertices\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: '_nextVertices',\n\t    value: function _nextVertices() {\n\t      var _this4 = this;\n\t\n\t      if (!this.renderCount--) {\n\t        this.symbols = this.symbols.map(function () {\n\t          return Math.random() > 0.5 ? 1 : -1;\n\t        });\n\t        this.renderCount = 10 * this.FPS;\n\t      }\n\t\n\t      this.vertices = this.vertices.map(function (v, i) {\n\t        var dx = Math.random() / 5;\n\t        var dy = Math.random() / 5;\n\t\n\t        var x = v[0] + _this4.symbols[i] * dx;\n\t        var y = v[1] + _this4.symbols[i] * dy;\n\t\n\t        return [x, y];\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Qnimate;\n\t}();\n\t\n\t// 'module' is always defined by webpack\n\t\n\t\n\twindow.Qnimate = module.exports = Qnimate;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.3.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = [];\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._.push(\"Z\");\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._.push(\n\t        \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._.push(\n\t          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t        );\n\t      }\n\t\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t      );\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._.push(\n\t        \"L\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t      );\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t  },\n\t  toString: function() {\n\t    return this._.join(\"\");\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\tvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t    minValue = maxValue = sumValue = nodes[i0].value;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (i1 = i0 + 1; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[i], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > i) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d, i) {\n\t  return i;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < n; ++i) {\n\t      count[i] = 0;\n\t    }\n\t\n\t    for (i = 0; i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      ++count[link.source.index], ++count[link.target.index];\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t    return dx || dy ? transform.translate(dx, dy) : transform;\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t    }\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(k, tx, ty) {\n\t  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * k + tx, y * k + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// qnimate.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bf24edea42d964d43cf0","import * as d3 from 'd3';\n\nclass Qnimate {\n\n  constructor({\n      id, width, height, vertices\n  }) {\n    this.domId = id;\n    this.width = width || 960;\n    this.height = height || 500;\n    this.vertexNum = vertices || 40;\n    this._init();\n  }\n\n  // public members\n\n  run() {\n    this.isRunning = true;\n    this._tick();\n  }\n\n  stop() {\n    this.isRunning = false;\n  }\n\n  // private members\n\n  _init() {\n    this.FPS = 30;\n    this.interval = 1000 / this.FPS;\n    this.then = Date.now();\n    this.renderCount = 10 * this.FPS;\n\n\n    this.voronoi = d3.voronoi();\n    this.vertices = d3.range(this.vertexNum).map(() =>[\n      d3.randomUniform(-this.width / 2, 1.5 * this.width)(),\n      d3.randomUniform(-this.height / 2, 1.5 * this.height)()\n    ]);\n    this.symbols = this.vertices.map(() => Math.random() > 0.5 ? 1 : -1);\n\n    // the root element <svg>\n    this.svg = d3.select(`#${this.domId}`)\n        .append('svg')\n        .attr('width', this.width)\n        .attr('height', this.height);\n\n    // our canvas <g>\n    this.graph = this.svg.append('g');\n  }\n\n  _tick() {\n    if (this.isRunning) {\n      if (window.requestAnimationFrame) {\n        requestAnimationFrame(() => this._tick());\n        const now = Date.now();\n        const delta = now - this.then;\n        if (delta > this.interval) {\n          this.then = now - (delta % this.interval);\n\n          // call render recursively\n          this._render(this.vertices);\n        }\n      } else {\n        setTimeout(() => this._tick(), this.interval);\n\n        // call render recursively\n        this._render(this.vertices);\n      }\n    }\n  }\n\n  /**\n   * generate color from a point\n   * @param d\n   * @private\n   */\n  _color(d) {\n    var dx = d[0] - this.width / 2,\n        dy = d[1] - this.height / 2;\n    return d3.lab(100 - (dx * dx + dy * dy) / 5000, dx / 10, dy / 10);\n  }\n\n  /**\n   * render a frame by vertices\n   * @private\n   */\n  _render() {\n    let paths = this.graph.selectAll('path')\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'butt')\n        .data(this.voronoi(this.vertices).triangles());\n\n    if (paths.nodes().length < 1) {\n      paths = paths.enter().append('path');\n    }\n\n    paths\n        .attr('fill', d => {\n          return this._color(d3.polygonCentroid(d3.polygonHull(d)))\n        })\n        .attr('d', d =>`M${d.join('L')}Z`);\n\n    // vertices generated at every render circle\n    this._nextVertices();\n  }\n\n  /**\n   * generate the next vertices\n   * @private\n   */\n  _nextVertices() {\n    if (!this.renderCount--) {\n      this.symbols = this.symbols.map(() => Math.random() > 0.5 ? 1 : -1);\n      this.renderCount = 10 * this.FPS;\n    }\n\n    this.vertices = this.vertices.map((v, i) => {\n      const dx = Math.random() / 5;\n      const dy = Math.random() / 5;\n\n      const x = v[0] + this.symbols[i] * dx;\n      const y = v[1] + this.symbols[i] * dy;\n\n      return [x, y];\n    });\n  }\n\n}\n\n// 'module' is always defined by webpack\nwindow.Qnimate = module.exports = Qnimate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/qnimate.js","// https://d3js.org Version 4.3.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.3.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d, i) {\n  return i;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(k, tx, ty) {\n  return k === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * k + tx, y * k + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, transform = identity$7, // scale and translate\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k = +_, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}